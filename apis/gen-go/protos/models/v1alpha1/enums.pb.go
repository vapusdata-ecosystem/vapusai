// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: protos/models/v1alpha1/enums.proto

//import "googleapis/v1/annotations.proto";
// import "buf/validate/validate.proto";

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AccessTokenScope int32

const (
	AccessTokenScope_INVALID_AT_SCOPE  AccessTokenScope = 0
	AccessTokenScope_DOMAIN_TOKEN      AccessTokenScope = 1
	AccessTokenScope_DATAPRODUCT_TOKEN AccessTokenScope = 2
)

// Enum value maps for AccessTokenScope.
var (
	AccessTokenScope_name = map[int32]string{
		0: "INVALID_AT_SCOPE",
		1: "DOMAIN_TOKEN",
		2: "DATAPRODUCT_TOKEN",
	}
	AccessTokenScope_value = map[string]int32{
		"INVALID_AT_SCOPE":  0,
		"DOMAIN_TOKEN":      1,
		"DATAPRODUCT_TOKEN": 2,
	}
)

func (x AccessTokenScope) Enum() *AccessTokenScope {
	p := new(AccessTokenScope)
	*p = x
	return p
}

func (x AccessTokenScope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccessTokenScope) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[0].Descriptor()
}

func (AccessTokenScope) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[0]
}

func (x AccessTokenScope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccessTokenScope.Descriptor instead.
func (AccessTokenScope) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{0}
}

type HashAlgos int32

const (
	HashAlgos_INVALID_HASH_ALGO HashAlgos = 0
	HashAlgos_SHA_256           HashAlgos = 1
)

// Enum value maps for HashAlgos.
var (
	HashAlgos_name = map[int32]string{
		0: "INVALID_HASH_ALGO",
		1: "SHA_256",
	}
	HashAlgos_value = map[string]int32{
		"INVALID_HASH_ALGO": 0,
		"SHA_256":           1,
	}
)

func (x HashAlgos) Enum() *HashAlgos {
	p := new(HashAlgos)
	*p = x
	return p
}

func (x HashAlgos) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HashAlgos) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[1].Descriptor()
}

func (HashAlgos) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[1]
}

func (x HashAlgos) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HashAlgos.Descriptor instead.
func (HashAlgos) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{1}
}

type AgentAction int32

const (
	AgentAction_INVALID_ACTION AgentAction = 0
	AgentAction_ADD            AgentAction = 1
	AgentAction_DELETE         AgentAction = 2
	AgentAction_UPDATE         AgentAction = 3
	AgentAction_CREATE         AgentAction = 4
	AgentAction_RUN            AgentAction = 5
	AgentAction_BUILD          AgentAction = 6
	AgentAction_DEPLOY         AgentAction = 7
	AgentAction_GET            AgentAction = 8
	AgentAction_LIST           AgentAction = 9
)

// Enum value maps for AgentAction.
var (
	AgentAction_name = map[int32]string{
		0: "INVALID_ACTION",
		1: "ADD",
		2: "DELETE",
		3: "UPDATE",
		4: "CREATE",
		5: "RUN",
		6: "BUILD",
		7: "DEPLOY",
		8: "GET",
		9: "LIST",
	}
	AgentAction_value = map[string]int32{
		"INVALID_ACTION": 0,
		"ADD":            1,
		"DELETE":         2,
		"UPDATE":         3,
		"CREATE":         4,
		"RUN":            5,
		"BUILD":          6,
		"DEPLOY":         7,
		"GET":            8,
		"LIST":           9,
	}
)

func (x AgentAction) Enum() *AgentAction {
	p := new(AgentAction)
	*p = x
	return p
}

func (x AgentAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgentAction) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[2].Descriptor()
}

func (AgentAction) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[2]
}

func (x AgentAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgentAction.Descriptor instead.
func (AgentAction) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{2}
}

type AuthnMethod int32

const (
	AuthnMethod_AM_INVALID AuthnMethod = 0
	AuthnMethod_OIDC       AuthnMethod = 1
	AuthnMethod_LDAP       AuthnMethod = 2
)

// Enum value maps for AuthnMethod.
var (
	AuthnMethod_name = map[int32]string{
		0: "AM_INVALID",
		1: "OIDC",
		2: "LDAP",
	}
	AuthnMethod_value = map[string]int32{
		"AM_INVALID": 0,
		"OIDC":       1,
		"LDAP":       2,
	}
)

func (x AuthnMethod) Enum() *AuthnMethod {
	p := new(AuthnMethod)
	*p = x
	return p
}

func (x AuthnMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthnMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[3].Descriptor()
}

func (AuthnMethod) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[3]
}

func (x AuthnMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthnMethod.Descriptor instead.
func (AuthnMethod) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{3}
}

type TtlDuration int32

const (
	TtlDuration_DEFAULT_TTL       TtlDuration = 0
	TtlDuration_TTL_SECONDS       TtlDuration = 1
	TtlDuration_TTL_MINUTES       TtlDuration = 2
	TtlDuration_TTL_HOURS         TtlDuration = 3
	TtlDuration_TTL_DAYS          TtlDuration = 4
	TtlDuration_TTL_MONTHS        TtlDuration = 5
	TtlDuration_TTL_NEVER_EXPIRES TtlDuration = 6
)

// Enum value maps for TtlDuration.
var (
	TtlDuration_name = map[int32]string{
		0: "DEFAULT_TTL",
		1: "TTL_SECONDS",
		2: "TTL_MINUTES",
		3: "TTL_HOURS",
		4: "TTL_DAYS",
		5: "TTL_MONTHS",
		6: "TTL_NEVER_EXPIRES",
	}
	TtlDuration_value = map[string]int32{
		"DEFAULT_TTL":       0,
		"TTL_SECONDS":       1,
		"TTL_MINUTES":       2,
		"TTL_HOURS":         3,
		"TTL_DAYS":          4,
		"TTL_MONTHS":        5,
		"TTL_NEVER_EXPIRES": 6,
	}
)

func (x TtlDuration) Enum() *TtlDuration {
	p := new(TtlDuration)
	*p = x
	return p
}

func (x TtlDuration) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TtlDuration) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[4].Descriptor()
}

func (TtlDuration) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[4]
}

func (x TtlDuration) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TtlDuration.Descriptor instead.
func (TtlDuration) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{4}
}

type TTLStatus int32

const (
	TTLStatus_INVALID_TTLSTATUS TTLStatus = 0
	TTLStatus_TTL_VALID         TTLStatus = 1
	TTLStatus_TTL_REVOKED       TTLStatus = 2
	TTLStatus_TTL_EXPIRED       TTLStatus = 3
)

// Enum value maps for TTLStatus.
var (
	TTLStatus_name = map[int32]string{
		0: "INVALID_TTLSTATUS",
		1: "TTL_VALID",
		2: "TTL_REVOKED",
		3: "TTL_EXPIRED",
	}
	TTLStatus_value = map[string]int32{
		"INVALID_TTLSTATUS": 0,
		"TTL_VALID":         1,
		"TTL_REVOKED":       2,
		"TTL_EXPIRED":       3,
	}
)

func (x TTLStatus) Enum() *TTLStatus {
	p := new(TTLStatus)
	*p = x
	return p
}

func (x TTLStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TTLStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[5].Descriptor()
}

func (TTLStatus) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[5]
}

func (x TTLStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TTLStatus.Descriptor instead.
func (TTLStatus) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{5}
}

type EncryptionAlgo int32

const (
	EncryptionAlgo_JSA_INVALID EncryptionAlgo = 0
	EncryptionAlgo_ED25519     EncryptionAlgo = 1
	EncryptionAlgo_ECDSA       EncryptionAlgo = 2
	EncryptionAlgo_RSA         EncryptionAlgo = 3
)

// Enum value maps for EncryptionAlgo.
var (
	EncryptionAlgo_name = map[int32]string{
		0: "JSA_INVALID",
		1: "ED25519",
		2: "ECDSA",
		3: "RSA",
	}
	EncryptionAlgo_value = map[string]int32{
		"JSA_INVALID": 0,
		"ED25519":     1,
		"ECDSA":       2,
		"RSA":         3,
	}
)

func (x EncryptionAlgo) Enum() *EncryptionAlgo {
	p := new(EncryptionAlgo)
	*p = x
	return p
}

func (x EncryptionAlgo) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EncryptionAlgo) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[6].Descriptor()
}

func (EncryptionAlgo) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[6]
}

func (x EncryptionAlgo) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EncryptionAlgo.Descriptor instead.
func (EncryptionAlgo) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{6}
}

type CommonStatus int32

const (
	CommonStatus_INVALID_STATUS     CommonStatus = 0
	CommonStatus_ACTIVE             CommonStatus = 1
	CommonStatus_INACTIVE           CommonStatus = 2
	CommonStatus_VALIDATION_PENDING CommonStatus = 3
	CommonStatus_DELETED            CommonStatus = 4
	CommonStatus_EXPIRED            CommonStatus = 5
	CommonStatus_INVALID            CommonStatus = 6
	CommonStatus_INVITED            CommonStatus = 7
	CommonStatus_FAILED             CommonStatus = 8
	CommonStatus_SUCCESS            CommonStatus = 9
)

// Enum value maps for CommonStatus.
var (
	CommonStatus_name = map[int32]string{
		0: "INVALID_STATUS",
		1: "ACTIVE",
		2: "INACTIVE",
		3: "VALIDATION_PENDING",
		4: "DELETED",
		5: "EXPIRED",
		6: "INVALID",
		7: "INVITED",
		8: "FAILED",
		9: "SUCCESS",
	}
	CommonStatus_value = map[string]int32{
		"INVALID_STATUS":     0,
		"ACTIVE":             1,
		"INACTIVE":           2,
		"VALIDATION_PENDING": 3,
		"DELETED":            4,
		"EXPIRED":            5,
		"INVALID":            6,
		"INVITED":            7,
		"FAILED":             8,
		"SUCCESS":            9,
	}
)

func (x CommonStatus) Enum() *CommonStatus {
	p := new(CommonStatus)
	*p = x
	return p
}

func (x CommonStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommonStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[7].Descriptor()
}

func (CommonStatus) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[7]
}

func (x CommonStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommonStatus.Descriptor instead.
func (CommonStatus) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{7}
}

type FileFormats int32

const (
	FileFormats_YAML FileFormats = 0
	FileFormats_JSON FileFormats = 1
	FileFormats_TOML FileFormats = 2
)

// Enum value maps for FileFormats.
var (
	FileFormats_name = map[int32]string{
		0: "YAML",
		1: "JSON",
		2: "TOML",
	}
	FileFormats_value = map[string]int32{
		"YAML": 0,
		"JSON": 1,
		"TOML": 2,
	}
)

func (x FileFormats) Enum() *FileFormats {
	p := new(FileFormats)
	*p = x
	return p
}

func (x FileFormats) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileFormats) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[8].Descriptor()
}

func (FileFormats) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[8]
}

func (x FileFormats) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileFormats.Descriptor instead.
func (FileFormats) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{8}
}

type TlsType int32

const (
	TlsType_INSECURE  TlsType = 0
	TlsType_PLAIN_TLS TlsType = 1
	TlsType_MTLS      TlsType = 2
)

// Enum value maps for TlsType.
var (
	TlsType_name = map[int32]string{
		0: "INSECURE",
		1: "PLAIN_TLS",
		2: "MTLS",
	}
	TlsType_value = map[string]int32{
		"INSECURE":  0,
		"PLAIN_TLS": 1,
		"MTLS":      2,
	}
)

func (x TlsType) Enum() *TlsType {
	p := new(TlsType)
	*p = x
	return p
}

func (x TlsType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TlsType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[9].Descriptor()
}

func (TlsType) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[9]
}

func (x TlsType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TlsType.Descriptor instead.
func (TlsType) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{9}
}

type ApiTokenType int32

const (
	ApiTokenType_BASIC  ApiTokenType = 0
	ApiTokenType_BEARER ApiTokenType = 1
	ApiTokenType_APIKEY ApiTokenType = 2
)

// Enum value maps for ApiTokenType.
var (
	ApiTokenType_name = map[int32]string{
		0: "BASIC",
		1: "BEARER",
		2: "APIKEY",
	}
	ApiTokenType_value = map[string]int32{
		"BASIC":  0,
		"BEARER": 1,
		"APIKEY": 2,
	}
)

func (x ApiTokenType) Enum() *ApiTokenType {
	p := new(ApiTokenType)
	*p = x
	return p
}

func (x ApiTokenType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiTokenType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[10].Descriptor()
}

func (ApiTokenType) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[10]
}

func (x ApiTokenType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiTokenType.Descriptor instead.
func (ApiTokenType) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{10}
}

// *
// Enum representing the retention frequency for data compliance.
type Frequency int32

const (
	Frequency_INVALID_FREQUENCY Frequency = 0
	Frequency_MONTH             Frequency = 1
	Frequency_WEEK              Frequency = 2
	Frequency_YEAR              Frequency = 3
	Frequency_HOUR              Frequency = 4
	Frequency_MINUTES           Frequency = 5
	Frequency_SECONDS           Frequency = 6
	Frequency_DAY               Frequency = 7
)

// Enum value maps for Frequency.
var (
	Frequency_name = map[int32]string{
		0: "INVALID_FREQUENCY",
		1: "MONTH",
		2: "WEEK",
		3: "YEAR",
		4: "HOUR",
		5: "MINUTES",
		6: "SECONDS",
		7: "DAY",
	}
	Frequency_value = map[string]int32{
		"INVALID_FREQUENCY": 0,
		"MONTH":             1,
		"WEEK":              2,
		"YEAR":              3,
		"HOUR":              4,
		"MINUTES":           5,
		"SECONDS":           6,
		"DAY":               7,
	}
)

func (x Frequency) Enum() *Frequency {
	p := new(Frequency)
	*p = x
	return p
}

func (x Frequency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Frequency) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[11].Descriptor()
}

func (Frequency) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[11]
}

func (x Frequency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Frequency.Descriptor instead.
func (Frequency) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{11}
}

type AIModelServiceProvider int32

const (
	AIModelServiceProvider_INVALID_PROVIDER AIModelServiceProvider = 0
	AIModelServiceProvider_OPENAI           AIModelServiceProvider = 1
	AIModelServiceProvider_MISTRAL          AIModelServiceProvider = 2
	AIModelServiceProvider_HUGGING_FACE     AIModelServiceProvider = 3
	AIModelServiceProvider_VAPUSAI          AIModelServiceProvider = 4
	AIModelServiceProvider_OLLAMA           AIModelServiceProvider = 5
	AIModelServiceProvider_AZURE_OPENAI     AIModelServiceProvider = 6
	AIModelServiceProvider_AZURE_PHI        AIModelServiceProvider = 7
	AIModelServiceProvider_GEMINI           AIModelServiceProvider = 8
	AIModelServiceProvider_AWS              AIModelServiceProvider = 9
	AIModelServiceProvider_META             AIModelServiceProvider = 10
)

// Enum value maps for AIModelServiceProvider.
var (
	AIModelServiceProvider_name = map[int32]string{
		0:  "INVALID_PROVIDER",
		1:  "OPENAI",
		2:  "MISTRAL",
		3:  "HUGGING_FACE",
		4:  "VAPUSAI",
		5:  "OLLAMA",
		6:  "AZURE_OPENAI",
		7:  "AZURE_PHI",
		8:  "GEMINI",
		9:  "AWS",
		10: "META",
	}
	AIModelServiceProvider_value = map[string]int32{
		"INVALID_PROVIDER": 0,
		"OPENAI":           1,
		"MISTRAL":          2,
		"HUGGING_FACE":     3,
		"VAPUSAI":          4,
		"OLLAMA":           5,
		"AZURE_OPENAI":     6,
		"AZURE_PHI":        7,
		"GEMINI":           8,
		"AWS":              9,
		"META":             10,
	}
)

func (x AIModelServiceProvider) Enum() *AIModelServiceProvider {
	p := new(AIModelServiceProvider)
	*p = x
	return p
}

func (x AIModelServiceProvider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AIModelServiceProvider) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[12].Descriptor()
}

func (AIModelServiceProvider) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[12]
}

func (x AIModelServiceProvider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AIModelServiceProvider.Descriptor instead.
func (AIModelServiceProvider) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{12}
}

type AIServiceHostType int32

const (
	AIServiceHostType_INVALID_HOST_TYPE AIServiceHostType = 0
	AIServiceHostType_VAPUSAI_STUDIO    AIServiceHostType = 1
	AIServiceHostType_OSS_SERVICE       AIServiceHostType = 2
	AIServiceHostType_MANAGED_SERVICE   AIServiceHostType = 3
)

// Enum value maps for AIServiceHostType.
var (
	AIServiceHostType_name = map[int32]string{
		0: "INVALID_HOST_TYPE",
		1: "VAPUSAI_STUDIO",
		2: "OSS_SERVICE",
		3: "MANAGED_SERVICE",
	}
	AIServiceHostType_value = map[string]int32{
		"INVALID_HOST_TYPE": 0,
		"VAPUSAI_STUDIO":    1,
		"OSS_SERVICE":       2,
		"MANAGED_SERVICE":   3,
	}
)

func (x AIServiceHostType) Enum() *AIServiceHostType {
	p := new(AIServiceHostType)
	*p = x
	return p
}

func (x AIServiceHostType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AIServiceHostType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[13].Descriptor()
}

func (AIServiceHostType) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[13]
}

func (x AIServiceHostType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AIServiceHostType.Descriptor instead.
func (AIServiceHostType) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{13}
}

// *
// @enum
// Enumerates the storage engines supported by the Vapus Data Platform system.
type StorageEngine int32

const (
	StorageEngine_INVALID_DS_SERVICE_TYPE StorageEngine = 0
	StorageEngine_MYSQL                   StorageEngine = 1
	StorageEngine_REDIS                   StorageEngine = 2
	StorageEngine_ELASTICSEARCH           StorageEngine = 3
	StorageEngine_MONGODB                 StorageEngine = 4
	StorageEngine_SECRET_MANAGER          StorageEngine = 5
	StorageEngine_HASHICORPVAULT          StorageEngine = 6
	StorageEngine_POSTGRES                StorageEngine = 7
	StorageEngine_OCI                     StorageEngine = 8
	StorageEngine_PYPI                    StorageEngine = 9
	StorageEngine_BLOB                    StorageEngine = 10
	StorageEngine_KAFKA_QUEUE             StorageEngine = 11
	StorageEngine_RABBITMQ                StorageEngine = 12
	StorageEngine_RESTAPI                 StorageEngine = 13
	StorageEngine_GRPC                    StorageEngine = 14
	StorageEngine_AWS_VAULT               StorageEngine = 15
	StorageEngine_GCP_VAULT               StorageEngine = 16
	StorageEngine_AZURE_VAULT             StorageEngine = 17
)

// Enum value maps for StorageEngine.
var (
	StorageEngine_name = map[int32]string{
		0:  "INVALID_DS_SERVICE_TYPE",
		1:  "MYSQL",
		2:  "REDIS",
		3:  "ELASTICSEARCH",
		4:  "MONGODB",
		5:  "SECRET_MANAGER",
		6:  "HASHICORPVAULT",
		7:  "POSTGRES",
		8:  "OCI",
		9:  "PYPI",
		10: "BLOB",
		11: "KAFKA_QUEUE",
		12: "RABBITMQ",
		13: "RESTAPI",
		14: "GRPC",
		15: "AWS_VAULT",
		16: "GCP_VAULT",
		17: "AZURE_VAULT",
	}
	StorageEngine_value = map[string]int32{
		"INVALID_DS_SERVICE_TYPE": 0,
		"MYSQL":                   1,
		"REDIS":                   2,
		"ELASTICSEARCH":           3,
		"MONGODB":                 4,
		"SECRET_MANAGER":          5,
		"HASHICORPVAULT":          6,
		"POSTGRES":                7,
		"OCI":                     8,
		"PYPI":                    9,
		"BLOB":                    10,
		"KAFKA_QUEUE":             11,
		"RABBITMQ":                12,
		"RESTAPI":                 13,
		"GRPC":                    14,
		"AWS_VAULT":               15,
		"GCP_VAULT":               16,
		"AZURE_VAULT":             17,
	}
)

func (x StorageEngine) Enum() *StorageEngine {
	p := new(StorageEngine)
	*p = x
	return p
}

func (x StorageEngine) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageEngine) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[14].Descriptor()
}

func (StorageEngine) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[14]
}

func (x StorageEngine) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageEngine.Descriptor instead.
func (StorageEngine) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{14}
}

type AIModelRoles int32

const (
	AIModelRoles_USER      AIModelRoles = 0
	AIModelRoles_SYSTEM    AIModelRoles = 1
	AIModelRoles_FUNCTION  AIModelRoles = 2
	AIModelRoles_ASSISTANT AIModelRoles = 3
	AIModelRoles_TOOL      AIModelRoles = 4
)

// Enum value maps for AIModelRoles.
var (
	AIModelRoles_name = map[int32]string{
		0: "USER",
		1: "SYSTEM",
		2: "FUNCTION",
		3: "ASSISTANT",
		4: "TOOL",
	}
	AIModelRoles_value = map[string]int32{
		"USER":      0,
		"SYSTEM":    1,
		"FUNCTION":  2,
		"ASSISTANT": 3,
		"TOOL":      4,
	}
)

func (x AIModelRoles) Enum() *AIModelRoles {
	p := new(AIModelRoles)
	*p = x
	return p
}

func (x AIModelRoles) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AIModelRoles) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[15].Descriptor()
}

func (AIModelRoles) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[15]
}

func (x AIModelRoles) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AIModelRoles.Descriptor instead.
func (AIModelRoles) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{15}
}

type ConfigScope int32

const (
	ConfigScope_STUDIO ConfigScope = 0
	ConfigScope_SPACE  ConfigScope = 1
)

// Enum value maps for ConfigScope.
var (
	ConfigScope_name = map[int32]string{
		0: "STUDIO",
		1: "SPACE",
	}
	ConfigScope_value = map[string]int32{
		"STUDIO": 0,
		"SPACE":  1,
	}
)

func (x ConfigScope) Enum() *ConfigScope {
	p := new(ConfigScope)
	*p = x
	return p
}

func (x ConfigScope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigScope) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_models_v1alpha1_enums_proto_enumTypes[16].Descriptor()
}

func (ConfigScope) Type() protoreflect.EnumType {
	return &file_protos_models_v1alpha1_enums_proto_enumTypes[16]
}

func (x ConfigScope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigScope.Descriptor instead.
func (ConfigScope) EnumDescriptor() ([]byte, []int) {
	return file_protos_models_v1alpha1_enums_proto_rawDescGZIP(), []int{16}
}

var File_protos_models_v1alpha1_enums_proto protoreflect.FileDescriptor

var file_protos_models_v1alpha1_enums_proto_rawDesc = []byte{
	0x0a, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2a, 0x51, 0x0a, 0x10, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x54, 0x5f, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x10, 0x00, 0x12,
	0x10, 0x0a, 0x0c, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10,
	0x01, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x41, 0x54, 0x41, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54,
	0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x02, 0x2a, 0x2f, 0x0a, 0x09, 0x48, 0x61, 0x73, 0x68,
	0x41, 0x6c, 0x67, 0x6f, 0x73, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x5f, 0x48, 0x41, 0x53, 0x48, 0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x48, 0x41, 0x5f, 0x32, 0x35, 0x36, 0x10, 0x01, 0x2a, 0x81, 0x01, 0x0a, 0x0b, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x41, 0x44, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45,
	0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x0a,
	0x0a, 0x06, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x55,
	0x4e, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x10, 0x06, 0x12, 0x0a,
	0x0a, 0x06, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x10, 0x07, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x45,
	0x54, 0x10, 0x08, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x09, 0x2a, 0x31, 0x0a,
	0x0b, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x0e, 0x0a, 0x0a,
	0x41, 0x4d, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x4f, 0x49, 0x44, 0x43, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x44, 0x41, 0x50, 0x10, 0x02,
	0x2a, 0x84, 0x01, 0x0a, 0x0b, 0x54, 0x74, 0x6c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x54, 0x54, 0x4c, 0x10,
	0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x54, 0x4c, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x53,
	0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x54, 0x4c, 0x5f, 0x4d, 0x49, 0x4e, 0x55, 0x54, 0x45,
	0x53, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x54, 0x4c, 0x5f, 0x48, 0x4f, 0x55, 0x52, 0x53,
	0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x54, 0x4c, 0x5f, 0x44, 0x41, 0x59, 0x53, 0x10, 0x04,
	0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x54, 0x4c, 0x5f, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x53, 0x10, 0x05,
	0x12, 0x15, 0x0a, 0x11, 0x54, 0x54, 0x4c, 0x5f, 0x4e, 0x45, 0x56, 0x45, 0x52, 0x5f, 0x45, 0x58,
	0x50, 0x49, 0x52, 0x45, 0x53, 0x10, 0x06, 0x2a, 0x53, 0x0a, 0x09, 0x54, 0x54, 0x4c, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f,
	0x54, 0x54, 0x4c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54,
	0x54, 0x4c, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x54,
	0x4c, 0x5f, 0x52, 0x45, 0x56, 0x4f, 0x4b, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x54,
	0x54, 0x4c, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x42, 0x0a, 0x0e,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x67, 0x6f, 0x12, 0x0f,
	0x0a, 0x0b, 0x4a, 0x53, 0x41, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x45, 0x44, 0x32, 0x35, 0x35, 0x31, 0x39, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x45, 0x43, 0x44, 0x53, 0x41, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x53, 0x41, 0x10, 0x03,
	0x2a, 0xa1, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10,
	0x01, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x12,
	0x16, 0x0a, 0x12, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x45,
	0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x4c, 0x45, 0x54,
	0x45, 0x44, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10,
	0x05, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x06, 0x12, 0x0b,
	0x0a, 0x07, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x44, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x10, 0x09, 0x2a, 0x2b, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x59, 0x41, 0x4d, 0x4c, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x4f, 0x4d, 0x4c, 0x10,
	0x02, 0x2a, 0x30, 0x0a, 0x07, 0x54, 0x6c, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08,
	0x49, 0x4e, 0x53, 0x45, 0x43, 0x55, 0x52, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x4c,
	0x41, 0x49, 0x4e, 0x5f, 0x54, 0x4c, 0x53, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x54, 0x4c,
	0x53, 0x10, 0x02, 0x2a, 0x31, 0x0a, 0x0c, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x42, 0x45, 0x41, 0x52, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x50,
	0x49, 0x4b, 0x45, 0x59, 0x10, 0x02, 0x2a, 0x6e, 0x0a, 0x09, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x46,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x43, 0x59, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x4f,
	0x4e, 0x54, 0x48, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x45, 0x45, 0x4b, 0x10, 0x02, 0x12,
	0x08, 0x0a, 0x04, 0x59, 0x45, 0x41, 0x52, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x4f, 0x55,
	0x52, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x49, 0x4e, 0x55, 0x54, 0x45, 0x53, 0x10, 0x05,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x53, 0x10, 0x06, 0x12, 0x07, 0x0a,
	0x03, 0x44, 0x41, 0x59, 0x10, 0x07, 0x2a, 0xb2, 0x01, 0x0a, 0x16, 0x41, 0x49, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x50, 0x52, 0x4f,
	0x56, 0x49, 0x44, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x50, 0x45, 0x4e, 0x41,
	0x49, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x49, 0x53, 0x54, 0x52, 0x41, 0x4c, 0x10, 0x02,
	0x12, 0x10, 0x0a, 0x0c, 0x48, 0x55, 0x47, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x41, 0x43, 0x45,
	0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x56, 0x41, 0x50, 0x55, 0x53, 0x41, 0x49, 0x10, 0x04, 0x12,
	0x0a, 0x0a, 0x06, 0x4f, 0x4c, 0x4c, 0x41, 0x4d, 0x41, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x41,
	0x5a, 0x55, 0x52, 0x45, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x41, 0x49, 0x10, 0x06, 0x12, 0x0d, 0x0a,
	0x09, 0x41, 0x5a, 0x55, 0x52, 0x45, 0x5f, 0x50, 0x48, 0x49, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06,
	0x47, 0x45, 0x4d, 0x49, 0x4e, 0x49, 0x10, 0x08, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x57, 0x53, 0x10,
	0x09, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x45, 0x54, 0x41, 0x10, 0x0a, 0x2a, 0x64, 0x0a, 0x11, 0x41,
	0x49, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x48, 0x4f, 0x53, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x56, 0x41, 0x50, 0x55, 0x53,
	0x41, 0x49, 0x5f, 0x53, 0x54, 0x55, 0x44, 0x49, 0x4f, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4f,
	0x53, 0x53, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f,
	0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x44, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10,
	0x03, 0x2a, 0x9a, 0x02, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x44,
	0x53, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x52,
	0x45, 0x44, 0x49, 0x53, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x4c, 0x41, 0x53, 0x54, 0x49,
	0x43, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x4f, 0x4e,
	0x47, 0x4f, 0x44, 0x42, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54,
	0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x48, 0x41,
	0x53, 0x48, 0x49, 0x43, 0x4f, 0x52, 0x50, 0x56, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x06, 0x12, 0x0c,
	0x0a, 0x08, 0x50, 0x4f, 0x53, 0x54, 0x47, 0x52, 0x45, 0x53, 0x10, 0x07, 0x12, 0x07, 0x0a, 0x03,
	0x4f, 0x43, 0x49, 0x10, 0x08, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x59, 0x50, 0x49, 0x10, 0x09, 0x12,
	0x08, 0x0a, 0x04, 0x42, 0x4c, 0x4f, 0x42, 0x10, 0x0a, 0x12, 0x0f, 0x0a, 0x0b, 0x4b, 0x41, 0x46,
	0x4b, 0x41, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x10, 0x0b, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x41,
	0x42, 0x42, 0x49, 0x54, 0x4d, 0x51, 0x10, 0x0c, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x53, 0x54,
	0x41, 0x50, 0x49, 0x10, 0x0d, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x52, 0x50, 0x43, 0x10, 0x0e, 0x12,
	0x0d, 0x0a, 0x09, 0x41, 0x57, 0x53, 0x5f, 0x56, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x0f, 0x12, 0x0d,
	0x0a, 0x09, 0x47, 0x43, 0x50, 0x5f, 0x56, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x10, 0x12, 0x0f, 0x0a,
	0x0b, 0x41, 0x5a, 0x55, 0x52, 0x45, 0x5f, 0x56, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x11, 0x2a, 0x4b,
	0x0a, 0x0c, 0x41, 0x49, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x08,
	0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x59, 0x53, 0x54,
	0x45, 0x4d, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x53, 0x53, 0x49, 0x53, 0x54, 0x41, 0x4e, 0x54, 0x10,
	0x03, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x4f, 0x4f, 0x4c, 0x10, 0x04, 0x2a, 0x24, 0x0a, 0x0b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54,
	0x55, 0x44, 0x49, 0x4f, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10,
	0x01, 0x42, 0xc9, 0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x0a, 0x45, 0x6e, 0x75, 0x6d, 0x73,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x61, 0x70, 0x75, 0x73, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x65, 0x63,
	0x6f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x61, 0x70, 0x75, 0x73, 0x61, 0x69, 0x2d,
	0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0xa2, 0x02, 0x03, 0x4d, 0x58, 0x58, 0xaa, 0x02, 0x0f, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x0f, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2, 0x02, 0x1b, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_models_v1alpha1_enums_proto_rawDescOnce sync.Once
	file_protos_models_v1alpha1_enums_proto_rawDescData = file_protos_models_v1alpha1_enums_proto_rawDesc
)

func file_protos_models_v1alpha1_enums_proto_rawDescGZIP() []byte {
	file_protos_models_v1alpha1_enums_proto_rawDescOnce.Do(func() {
		file_protos_models_v1alpha1_enums_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_models_v1alpha1_enums_proto_rawDescData)
	})
	return file_protos_models_v1alpha1_enums_proto_rawDescData
}

var file_protos_models_v1alpha1_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 17)
var file_protos_models_v1alpha1_enums_proto_goTypes = []any{
	(AccessTokenScope)(0),       // 0: models.v1alpha1.AccessTokenScope
	(HashAlgos)(0),              // 1: models.v1alpha1.HashAlgos
	(AgentAction)(0),            // 2: models.v1alpha1.AgentAction
	(AuthnMethod)(0),            // 3: models.v1alpha1.AuthnMethod
	(TtlDuration)(0),            // 4: models.v1alpha1.TtlDuration
	(TTLStatus)(0),              // 5: models.v1alpha1.TTLStatus
	(EncryptionAlgo)(0),         // 6: models.v1alpha1.EncryptionAlgo
	(CommonStatus)(0),           // 7: models.v1alpha1.CommonStatus
	(FileFormats)(0),            // 8: models.v1alpha1.FileFormats
	(TlsType)(0),                // 9: models.v1alpha1.TlsType
	(ApiTokenType)(0),           // 10: models.v1alpha1.ApiTokenType
	(Frequency)(0),              // 11: models.v1alpha1.Frequency
	(AIModelServiceProvider)(0), // 12: models.v1alpha1.AIModelServiceProvider
	(AIServiceHostType)(0),      // 13: models.v1alpha1.AIServiceHostType
	(StorageEngine)(0),          // 14: models.v1alpha1.StorageEngine
	(AIModelRoles)(0),           // 15: models.v1alpha1.AIModelRoles
	(ConfigScope)(0),            // 16: models.v1alpha1.ConfigScope
}
var file_protos_models_v1alpha1_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protos_models_v1alpha1_enums_proto_init() }
func file_protos_models_v1alpha1_enums_proto_init() {
	if File_protos_models_v1alpha1_enums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_models_v1alpha1_enums_proto_rawDesc,
			NumEnums:      17,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_models_v1alpha1_enums_proto_goTypes,
		DependencyIndexes: file_protos_models_v1alpha1_enums_proto_depIdxs,
		EnumInfos:         file_protos_models_v1alpha1_enums_proto_enumTypes,
	}.Build()
	File_protos_models_v1alpha1_enums_proto = out.File
	file_protos_models_v1alpha1_enums_proto_rawDesc = nil
	file_protos_models_v1alpha1_enums_proto_goTypes = nil
	file_protos_models_v1alpha1_enums_proto_depIdxs = nil
}
